group 'com.odib'
version '0.0.1'
def env = System.getProperty("env") ?: "dev"
buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//springBoot {
//    executable = true
//}
bootJar {
    launchScript()
}
jar {
    manifest {
        attributes 'Main-Class': 'com.odib.bcp.im.MainApplication'
        attributes 'Class-Path': 'bcp-im.jar'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.glassfish.jersey.core:jersey-client:2.27'
    testCompile 'commons-codec:commons-codec:1.9'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.27'
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'commons-codec:commons-codec:1.9'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'io.netty:netty-all:4.0.4.Final'
    compile 'org.xerial:sqlite-jdbc:3.7.2'
    compile 'log4j:log4j:1.2.17'

    compile 'org.springframework.boot:spring-boot-starter-web:2.0.2.RELEASE'
}
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/profile/$env"]
        }
    }
}